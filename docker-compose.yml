services:
  niffler-all-db:
    container_name: niffler-all-db
    image: postgres:15.1
    environment:
      - CREATE_DATABASES=niffler-auth,niffler-currency,niffler-spend,niffler-userdata
      - PGUSER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - ./postgres/postgresql.conf:/etc/postgresql.conf
      - ./postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - niffler-network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - niffler-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - niffler-network

  auth.niffler.dc:
    container_name: auth.niffler.dc
    image: ${PREFIX}/niffler-auth-docker:latest
    ports:
      - 9000:9000
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    depends_on:
      niffler-all-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - niffler-network

  currency.niffler.dc:
    container_name: currency.niffler.dc
    image: ${PREFIX}/niffler-currency-docker:latest
    ports:
      - 8091:8091
      - 8092:8092
    restart: always
    depends_on:
      niffler-all-db:
        condition: service_healthy
    networks:
      - niffler-network

  gateway.niffler.dc:
    container_name: gateway.niffler.dc
    image: ${PREFIX}/niffler-gateway-docker:latest
    ports:
      - 8090:8090
    healthcheck:
      test: "wget --spider http://localhost:8090/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    depends_on:
      auth.niffler.dc:
        condition: service_healthy
    networks:
      - niffler-network

  spend.niffler.dc:
    container_name: spend.niffler.dc
    image: ${PREFIX}/niffler-spend-docker:latest
    ports:
      - 8093:8093
    restart: always
    depends_on:
      niffler-all-db:
        condition: service_healthy
    networks:
      - niffler-network

  userdata.niffler.dc:
    container_name: userdata.niffler.dc
    image: ${PREFIX}/niffler-userdata-docker:latest
    ports:
      - 8089:8089
    restart: always
    depends_on:
      auth.niffler.dc:
        condition: service_healthy
    networks:
      - niffler-network

  frontend.niffler.dc:
    container_name: frontend.niffler.dc
    build:
      context: ./${FRONT}
      dockerfile: ./Dockerfile
      tags:
        - ${PREFIX}/${FRONT}-docker:latest
      args:
        NPM_COMMAND: build:docker
        VERSION: ${FRONT_VERSION}
    ports:
      - 80:80
    depends_on:
      gateway.niffler.dc:
        condition: service_started
    networks:
      - niffler-network

networks:
  niffler-network:
    driver: bridge
